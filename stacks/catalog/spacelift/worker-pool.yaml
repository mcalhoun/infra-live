components:
  terraform:
    spacelift/worker-pool:
      metadata:
        component: spacelift/worker-pool
      settings:
        spacelift:
          space_name: root
          autodeploy: true
          labels:
            - spacelift-worker-pool
      vars:
        enabled: true
        space_id: root
        name: spacelift-default-worker-pool
        spacelift_api_endpoint: https://mcalhoun.app.spacelift.io
        ecr_repo_name: mcalhoun/infra-live
        aws_config_file: /etc/aws-config/aws-config-spacelift
        ecr_stage_name: auto
        instance_type: t3.small
        wait_for_capacity_timeout: "10m"
        spacelift_agents_per_node: 3
        min_size: 1
        max_size: 1
        desired_capacity: null
        infracost_enabled: false
        default_cooldown: 300
        scale_down_cooldown_seconds: 2700
        # Set a low scaling threshold to ensure new workers are launched as soon as the current one(s) are busy
        cpu_utilization_high_threshold_percent: 10
        cpu_utilization_low_threshold_percent: 5
        health_check_type: EC2
        health_check_grace_period: 300
        termination_policies:
          - OldestLaunchConfiguration
        ebs_optimized: true
        block_device_mappings:
          - device_name: "/dev/xvda"
            no_device: null
            virtual_name: null
            ebs:
              delete_on_termination: null
              encrypted: false
              iops: null
              kms_key_id: null
              snapshot_id: null
              volume_size: 100
              volume_type: "gp2"
        iam_attributes:
          - admin
        instance_refresh:
          # https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html
          # https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_group#instance_refresh
          strategy: Rolling
          preferences:
            # The number of seconds until a newly launched instance is configured and ready to use
            # Default behavior is to use the Auto Scaling Group's health check grace period
            instance_warmup: null
            # The amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue,
            # as a percentage of the desired capacity of the Auto Scaling group
            min_healthy_percentage: 50
          triggers: null
